{"version":3,"sources":["helpers/helper.js","Components/table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["spentMinutes","startTime","endTime","Error","startHours","Number","split","startMinutes","endHours","endMinutes","mapDaysToTd","days","allObj","dayNumber","lastDayNumber","zeroTds","allMinutes","map","day","Date","Start","End","i","push","React","createElement","key","uuidv4","renderLastDay","lastDay","length","Table","className","Array","keys","index","users","user","Fullname","Days","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAuBeA,MAvBf,SAAsBC,EAAWC,GAI9B,IAAKD,IAAcC,EAChB,MAAM,IAAIC,MAAM,kEAGnB,IAAMC,EAAaC,OAAOJ,EAAUK,MAAM,KAAK,IACzCC,EAAeF,OAAOJ,EAAUK,MAAM,KAAK,IAE3CE,EAAWH,OAAOH,EAAQI,MAAM,KAAK,IACrCG,EAAaJ,OAAOH,EAAQI,MAAM,KAAK,IAE7C,IAAKF,IAAeG,IAAiBC,IAAaC,EAC/C,MAAM,IAAIN,MAAM,gDAKnB,OAnBgB,GAiBGI,EAjBH,IAiBmBC,EAAWJ,EAAa,GAAeK,GAEzD,G,OCdpB,SAASC,EAAYC,EAAMC,GACxB,IAAIC,EAAY,KACZC,EAAgB,EAChBC,EAAU,GAGd,OAFAH,EAAOI,WAAa,EAEbL,EAAKM,KAAI,SAAAC,GAKb,GAJAL,EAAYR,OAAOa,EAAIC,KAAKb,MAAM,KAAK,IACvCM,EAAOI,YAAchB,EAAakB,EAAIE,MAAOF,EAAIG,KACjDN,EAAU,GAENF,EAAYC,GAAiB,EAC9B,IAAK,IAAIQ,EAAI,EAAGA,EAAIT,EAAYC,EAAgB,EAAGQ,IAChDP,EAAQQ,KAAKC,IAAMC,cAAc,KAAM,CAAEC,IAAKC,eAAY,MAKhE,OAFAb,EAAgBD,EAGb,iDACQE,GACL,mCAAqBf,EAAakB,EAAIE,MAAOF,EAAIG,OAAxCM,qBAMrB,SAASC,EAAcjB,GACpB,IAAMkB,EAAUxB,OAAOM,EAAKA,EAAKmB,OAAS,GAAGX,KAAKb,MAAM,KAAK,IACzDS,EAAU,GAEd,GAAIc,EAAU,GAAI,CACf,IAAK,IAAIP,EAAI,EAAGA,EAAI,GAAKO,EAASP,IAC/BP,EAAQQ,KAAKC,IAAMC,cAAc,KAAM,CAAEC,IAAKC,eAAY,MAG7D,MAAM,GAAN,OAAWZ,IAsCFgB,MAlCf,WACG,IAAInB,EAAS,CACVI,WAAY,MAEf,OACG,8BACG,wBAAOgB,UAAU,gBAAjB,UACG,gCACG,+BACG,qCAASL,eACR,YAAIM,MAAM,IAAIC,QAAQjB,KAAI,SAACJ,EAAWsB,GAAZ,OACxB,6BAAoBtB,EAAY,GAAvBc,kBAEZ,8CAASA,oBAGf,gCACIS,EAAMnB,KAAI,SAAAoB,GACR,OACG,+BACG,6BAAoBA,EAAKC,UAAhBX,eAERjB,EAAY2B,EAAKE,KAAM3B,GACvBgB,EAAcS,EAAKE,MACpB,6BAAoB3B,EAAOI,YAAlBW,iBALHU,EAAKG,eCtDpBC,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCMSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7cbc8eb2.chunk.js","sourcesContent":["function spentMinutes(startTime, endTime) {\r\n   const MINUTES = 60;\r\n   let result = null;\r\n\r\n   if (!startTime || !endTime) {\r\n      throw new Error(\"spentMinutes: startTime and endTime can't be undefined or null\");\r\n   }\r\n\r\n   const startHours = Number(startTime.split('-')[0]);\r\n   const startMinutes = Number(startTime.split('-')[1]);\r\n\r\n   const endHours = Number(endTime.split('-')[0]);\r\n   const endMinutes = Number(endTime.split('-')[1]);\r\n\r\n   if (!startHours || !startMinutes || !endHours || !endMinutes) {\r\n      throw new Error(\"Hours and minutes can't be undefined or null\");\r\n   }\r\n\r\n   result = MINUTES - startMinutes + (endHours - startHours - 1) * MINUTES + endMinutes;\r\n\r\n   return result || 0;\r\n}\r\n\r\nexport default spentMinutes;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport users from './data.json';\r\nimport spentMinutes from '../../helpers/helper';\r\n\r\nfunction mapDaysToTd(days, allObj) {\r\n   let dayNumber = null;\r\n   let lastDayNumber = 0;\r\n   let zeroTds = [];\r\n   allObj.allMinutes = 0;\r\n\r\n   return days.map(day => {\r\n      dayNumber = Number(day.Date.split('-')[2]);\r\n      allObj.allMinutes += spentMinutes(day.Start, day.End);\r\n      zeroTds = [];\r\n\r\n      if (dayNumber - lastDayNumber >= 2) {\r\n         for (let i = 0; i < dayNumber - lastDayNumber - 1; i++) {\r\n            zeroTds.push(React.createElement('td', { key: uuidv4() }, '0'));\r\n         }\r\n      }\r\n      lastDayNumber = dayNumber;\r\n\r\n      return (\r\n         <>\r\n            {[...zeroTds]}\r\n            <td key={uuidv4()}> {spentMinutes(day.Start, day.End)}</td>\r\n         </>\r\n      );\r\n   });\r\n}\r\n\r\nfunction renderLastDay(days) {\r\n   const lastDay = Number(days[days.length - 1].Date.split('-')[2]);\r\n   let zeroTds = [];\r\n\r\n   if (lastDay < 31) {\r\n      for (let i = 0; i < 31 - lastDay; i++) {\r\n         zeroTds.push(React.createElement('td', { key: uuidv4() }, '0'));\r\n      }\r\n\r\n      return [...zeroTds];\r\n   }\r\n}\r\n\r\nfunction Table() {\r\n   let allObj = {\r\n      allMinutes: null,\r\n   };\r\n   return (\r\n      <div>\r\n         <table className='content-table'>\r\n            <thead>\r\n               <tr>\r\n                  <th key={uuidv4()}>user</th>\r\n                  {[...Array(31).keys()].map((dayNumber, index) => (\r\n                     <th key={uuidv4()}>{dayNumber + 1}</th>\r\n                  ))}\r\n                  <th key={uuidv4()}>Monthly total</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {users.map(user => {\r\n                  return (\r\n                     <tr key={user.id}>\r\n                        <td key={uuidv4()}>{user.Fullname}</td>\r\n\r\n                        {mapDaysToTd(user.Days, allObj)}\r\n                        {renderLastDay(user.Days)}\r\n                        <td key={uuidv4()}>{allObj.allMinutes}</td>\r\n                     </tr>\r\n                  );\r\n               })}\r\n            </tbody>\r\n         </table>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Table;\r\n","import './App.css';\nimport Table from './Components/table/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}